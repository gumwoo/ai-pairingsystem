version: '3.8'

services:
  # MySQL service
  mysql-db:
    image: mysql:8.0
    container_name: ai-pairing-mysql
    restart: always
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./server/src/config/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network
    environment:
      - MYSQL_ROOT_PASSWORD=rootpassword
      - MYSQL_DATABASE=ai_pairing_db
      - MYSQL_USER=ai_pairing_user
      - MYSQL_PASSWORD=ai_pairing_password

  # Backend API service
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: ai-pairing-server
    restart: always
    ports:
      - "5000:5000"
    depends_on:
      - mysql-db
    environment:
      - NODE_ENV=production
      - PORT=5000
      - DB_HOST=mysql-db
      - DB_PORT=3306
      - DB_USER=ai_pairing_user
      - DB_PASSWORD=ai_pairing_password
      - DB_NAME=ai_pairing_db
    volumes:
      - ./server:/app
      - /app/node_modules
    networks:
      - app-network

  # Frontend client service
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: ai-pairing-client
    restart: always
    ports:
      - "80:80"
    depends_on:
      - server
    networks:
      - app-network

  # AI Model service (using Python)
  ai-model:
    build:
      context: ./ai-server
      dockerfile: Dockerfile.model
    container_name: ai-pairing-model
    restart: always
    ports:
      - "8000:8000"
    volumes:
      - ./ai-server:/app
    networks:
      - app-network

# Docker Networks
networks:
  app-network:
    driver: bridge

# Docker Volumes
volumes:
  mysql_data:
    driver: local
